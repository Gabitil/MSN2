CREATE TABLE SALA (
    ID_SALA NUMBER(10) NOT NULL,
    NOME VARCHAR2(50) NOT NULL,
    TIPO VARCHAR2(10) NOT NULL,
    DATA_CRIACAO DATE DEFAULT SYSDATE,
    PRIMARY KEY (ID_SALA)
);

CREATE TABLE USUARIO (
    ID_USUARIO NUMBER(10) NOT NULL,
    NOME VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(50) NOT NULL,
    DATA_CADASTRO DATE DEFAULT SYSDATE,
    SENHA VARCHAR2(20) NOT NULL,
    PRIMARY KEY (ID_USUARIO)
);

CREATE TABLE BLOQUEIO(
    ID_USU_BLOQUEIA NUMBER(10) NOT NULL,
    ID_USU_BLOQUEADO NUMBER(10) NOT NULL,
    DATA_BLOQUEIO DATE DEFAULT SYSDATE,
    PRIMARY KEY (ID_USU_BLOQUEIA, ID_USU_BLOQUEADO),
    FOREIGN KEY (ID_USU_BLOQUEIA) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_USU_BLOQUEADO) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE MENSAGEM_USUARIO (
    ID_MENSAGEM NUMBER(10) NOT NULL,
    ID_REMETENTE NUMBER(10) NOT NULL,
    ID_DESTINATARIO NUMBER(10) NOT NULL,
    DATA_ENVIO DATE DEFAULT SYSDATE,
    MENSAGEM VARCHAR2(500) NOT NULL,
    PRIMARY KEY (ID_MENSAGEM),
    FOREIGN KEY (ID_REMETENTE) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_DESTINATARIO) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE PARTICIPACAO_SALA (
    ID_USUARIO NUMBER(10) NOT NULL,
    ID_SALA NUMBER(10) NOT NULL,
    DATA_ENTRADA DATE DEFAULT SYSDATE,
    PRIMARY KEY (ID_USUARIO, ID_SALA),
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_SALA) REFERENCES SALA(ID_SALA)
);

CREATE TABLE MENSAGEM_SALA (
    ID_MENSAGEM NUMBER(10) NOT NULL,
    ID_SALA NUMBER(10) NOT NULL,
    ID_REMETENTE NUMBER(10) NOT NULL,
    DATA_ENVIO DATE DEFAULT SYSDATE,
    MENSAGEM VARCHAR2(500) NOT NULL,
    PRIMARY KEY (ID_MENSAGEM),
    FOREIGN KEY (ID_SALA) REFERENCES SALA(ID_SALA),
    FOREIGN KEY (ID_REMETENTE) REFERENCES USUARIO(ID_USUARIO)
);

ALTER TABLE SALA ADD CRIADOR NUMBER(10) NOT NULL;
ALTER TABLE SALA ADD CONSTRAINT FK_CRIADOR FOREIGN KEY (CRIADOR) REFERENCES USUARIO(ID_USUARIO);

INSERT INTO USUARIO (ID_USUARIO, NOME, EMAIL, SENHA) VALUES (1, 'Admin', 'teste@teste.com', 'admin123');

GRANT ALL ON SALA TO ECLBDIT205;
GRANT ALL ON USUARIO TO ECLBDIT205;
GRANT ALL ON BLOQUEIO TO ECLBDIT205;
GRANT ALL ON MENSAGEM_USUARIO TO ECLBDIT205;
GRANT ALL ON PARTICIPACAO_SALA TO ECLBDIT205;
GRANT ALL ON MENSAGEM_SALA TO ECLBDIT205;

-- ===================================================================
-- ===================================================================

-- Triggers:
-- Trigger para impedir mensagens em salas privadas sem participação
CREATE OR REPLACE TRIGGER trg_impedir_mensagem_privada
BEFORE INSERT ON MENSAGEM_SALA
FOR EACH ROW
DECLARE
    v_tipo SALA.TIPO%TYPE;
    v_count NUMBER;
BEGIN
    -- Obter tipo da sala
    SELECT TIPO INTO v_tipo FROM SALA WHERE ID_SALA = :NEW.ID_SALA;

    -- Se for privada, verificar participação
    IF v_tipo = 'privada' THEN
        SELECT COUNT(*) INTO v_count
        FROM PARTICIPACAO_SALA
        WHERE ID_USUARIO = :NEW.ID_REMETENTE
          AND ID_SALA = :NEW.ID_SALA;

        IF v_count = 0 THEN
            RAISE_APPLICATION_ERROR(-20001, 'Usuário não participa da sala privada.');
        END IF;
    END IF;
END;
/

-- Trigger para atualizar data de entrada na sala
CREATE OR REPLACE TRIGGER trg_atualiza_data_entrada
BEFORE INSERT ON PARTICIPACAO_SALA
FOR EACH ROW
DECLARE
    v_exists NUMBER;
BEGIN
    SELECT COUNT(*) INTO v_exists
    FROM PARTICIPACAO_SALA
    WHERE ID_USUARIO = :NEW.ID_USUARIO AND ID_SALA = :NEW.ID_SALA;

    IF v_exists > 0 THEN
        DELETE FROM PARTICIPACAO_SALA
        WHERE ID_USUARIO = :NEW.ID_USUARIO AND ID_SALA = :NEW.ID_SALA;
    END IF;

    -- :NEW.DATA_ENTRADA já será o SYSDATE por padrão
END;
/


-- Trigger que atualiza data de bloqueio
CREATE OR REPLACE TRIGGER trg_data_bloqueio
BEFORE INSERT ON BLOQUEIO
FOR EACH ROW
BEGIN
    :NEW.DATA_BLOQUEIO := SYSDATE;
END;
/


-- Trigger que impede mensagens entre usuarios bloqueados
CREATE OR REPLACE TRIGGER trg_bloqueio_mensagem
BEFORE INSERT ON MENSAGEM_USUARIO
FOR EACH ROW
DECLARE
    v_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO v_count
    FROM BLOQUEIO
    WHERE (ID_USU_BLOQUEIA = :NEW.ID_REMETENTE AND ID_USU_BLOQUEADO = :NEW.ID_DESTINATARIO)
       OR (ID_USU_BLOQUEIA = :NEW.ID_DESTINATARIO AND ID_USU_BLOQUEADO = :NEW.ID_REMETENTE);

    IF v_count > 0 THEN
        RAISE_APPLICATION_ERROR(-20002, 'Mensagem bloqueada: um dos usuários bloqueou o outro.');
    END IF;
END;
/

-- Auditoria
CREATE TABLE LOG_ENVIO (
    ID_LOG NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ID_USUARIO NUMBER NOT NULL,
    TIPO_ENVIO VARCHAR2(20), -- 'USUARIO' ou 'SALA'
    ID_DESTINO NUMBER,        -- ID_DESTINATARIO ou ID_SALA
    DATA_ENVIO DATE DEFAULT SYSDATE
);

CREATE OR REPLACE TRIGGER trg_log_msg_usuario
AFTER INSERT ON MENSAGEM_USUARIO
FOR EACH ROW
BEGIN
    INSERT INTO LOG_ENVIO (ID_USUARIO, TIPO_ENVIO, ID_DESTINO)
    VALUES (:NEW.ID_REMETENTE, 'USUARIO', :NEW.ID_DESTINATARIO);
END;
/

CREATE OR REPLACE TRIGGER trg_log_msg_sala
AFTER INSERT ON MENSAGEM_SALA
FOR EACH ROW
BEGIN
    INSERT INTO LOG_ENVIO (ID_USUARIO, TIPO_ENVIO, ID_DESTINO)
    VALUES (:NEW.ID_REMETENTE, 'SALA', :NEW.ID_SALA);
END;
/

-- ===================================================================
-- ===================================================================

-- Povoamento:

-- ========================================
-- USUARIO (5 registros)
-- ========================================
INSERT INTO ECLBDIT215.USUARIO (ID_USUARIO, NOME, EMAIL, SENHA) VALUES (1, 'Alice', 'alice@email.com', 'senha1');
INSERT INTO ECLBDIT215.USUARIO (ID_USUARIO, NOME, EMAIL, SENHA) VALUES (2, 'Bruno', 'bruno@email.com', 'senha2');
INSERT INTO ECLBDIT215.USUARIO (ID_USUARIO, NOME, EMAIL, SENHA) VALUES (3, 'Carla', 'carla@email.com', 'senha3');
INSERT INTO ECLBDIT215.USUARIO (ID_USUARIO, NOME, EMAIL, SENHA) VALUES (4, 'Diego', 'diego@email.com', 'senha4');
INSERT INTO ECLBDIT215.USUARIO (ID_USUARIO, NOME, EMAIL, SENHA) VALUES (5, 'Eva', 'eva@email.com', 'senha5');

-- ========================================
-- SALA (5 registros)
-- ========================================
INSERT INTO ECLBDIT215.SALA (ID_SALA, NOME, TIPO, CRIADOR) VALUES (10, 'Geral', 'publica', 1);
INSERT INTO ECLBDIT215.SALA (ID_SALA, NOME, TIPO, CRIADOR) VALUES (11, 'Dev', 'publica', 2);
INSERT INTO ECLBDIT215.SALA (ID_SALA, NOME, TIPO, CRIADOR) VALUES (12, 'Marketing', 'publica', 3);
INSERT INTO ECLBDIT215.SALA (ID_SALA, NOME, TIPO, CRIADOR) VALUES (13, 'RH Privado', 'privada', 4);
INSERT INTO ECLBDIT215.SALA (ID_SALA, NOME, TIPO, CRIADOR) VALUES (14, 'Diretoria', 'privada', 5);

-- ========================================
-- PARTICIPACAO_SALA
-- ========================================
INSERT INTO ECLBDIT215.PARTICIPACAO_SALA (ID_USUARIO, ID_SALA) VALUES (1, 10);
INSERT INTO ECLBDIT215.PARTICIPACAO_SALA (ID_USUARIO, ID_SALA) VALUES (2, 10);
INSERT INTO ECLBDIT215.PARTICIPACAO_SALA (ID_USUARIO, ID_SALA) VALUES (3, 11);
INSERT INTO ECLBDIT215.PARTICIPACAO_SALA (ID_USUARIO, ID_SALA) VALUES (4, 12);
INSERT INTO ECLBDIT215.PARTICIPACAO_SALA (ID_USUARIO, ID_SALA) VALUES (5, 13);
INSERT INTO ECLBDIT215.PARTICIPACAO_SALA (ID_USUARIO, ID_SALA) VALUES (2, 13);
INSERT INTO ECLBDIT215.PARTICIPACAO_SALA (ID_USUARIO, ID_SALA) VALUES (1, 14);

-- ========================================
-- BLOQUEIO
-- ========================================
INSERT INTO ECLBDIT215.BLOQUEIO (ID_USU_BLOQUEIA, ID_USU_BLOQUEADO) VALUES (1, 2);
INSERT INTO ECLBDIT215.BLOQUEIO (ID_USU_BLOQUEIA, ID_USU_BLOQUEADO) VALUES (2, 3);
INSERT INTO ECLBDIT215.BLOQUEIO (ID_USU_BLOQUEIA, ID_USU_BLOQUEADO) VALUES (3, 4);
INSERT INTO ECLBDIT215.BLOQUEIO (ID_USU_BLOQUEIA, ID_USU_BLOQUEADO) VALUES (4, 5);
INSERT INTO ECLBDIT215.BLOQUEIO (ID_USU_BLOQUEIA, ID_USU_BLOQUEADO) VALUES (5, 1);

-- ========================================
-- MENSAGEM_USUARIO
-- ========================================
INSERT INTO ECLBDIT215.MENSAGEM_USUARIO (ID_MENSAGEM, ID_REMETENTE, ID_DESTINATARIO, MENSAGEM)
VALUES (100, 3, 5, 'Olá Eva!');

INSERT INTO ECLBDIT215.MENSAGEM_USUARIO (ID_MENSAGEM, ID_REMETENTE, ID_DESTINATARIO, MENSAGEM)
VALUES (101, 4, 2, 'Bom dia Bruno');

INSERT INTO ECLBDIT215.MENSAGEM_USUARIO (ID_MENSAGEM, ID_REMETENTE, ID_DESTINATARIO, MENSAGEM)
VALUES (102, 5, 3, 'Tudo certo Carla?');

INSERT INTO ECLBDIT215.MENSAGEM_USUARIO (ID_MENSAGEM, ID_REMETENTE, ID_DESTINATARIO, MENSAGEM)
VALUES (103, 3, 1, 'Oi Alice');

INSERT INTO ECLBDIT215.MENSAGEM_USUARIO (ID_MENSAGEM, ID_REMETENTE, ID_DESTINATARIO, MENSAGEM)
VALUES (104, 4, 1, 'Reunião agora');

-- ========================================
-- MENSAGEM_SALA
-- ========================================
INSERT INTO ECLBDIT215.MENSAGEM_SALA (ID_MENSAGEM, ID_SALA, ID_REMETENTE, MENSAGEM)
VALUES (200, 10, 1, 'Mensagem na geral');

INSERT INTO ECLBDIT215.MENSAGEM_SALA (ID_MENSAGEM, ID_SALA, ID_REMETENTE, MENSAGEM)
VALUES (201, 11, 3, 'Discussão técnica');

INSERT INTO ECLBDIT215.MENSAGEM_SALA (ID_MENSAGEM, ID_SALA, ID_REMETENTE, MENSAGEM)
VALUES (202, 12, 4, 'Campanha nova');

INSERT INTO ECLBDIT215.MENSAGEM_SALA (ID_MENSAGEM, ID_SALA, ID_REMETENTE, MENSAGEM)
VALUES (203, 13, 2, 'Recursos humanos');

INSERT INTO ECLBDIT215.MENSAGEM_SALA (ID_MENSAGEM, ID_SALA, ID_REMETENTE, MENSAGEM)
VALUES (204, 14, 1, 'Reunião da diretoria');
